{"version":3,"sources":["webpack:///./src/firebase/useExportNote.js","webpack:///./src/components/export-note/export-note-list/ExportNoteList.vue?fcd6","webpack:///./node_modules/core-js/modules/es.array.map.js","webpack:///./src/components/export-note/export-note-list/ExportNoteList.vue","webpack:///./src/components/export-note/export-note-list/ExportNoteList.vue?223d"],"names":["getYear","Date","getFullYear","getMonth","firstDayOfMonth","getTime","exportNoteArray","reactive","db","getFirestore","qr","query","collection","where","orderBy","onSnapshot","snapshot","docChanges","forEach","change","newNote","doc","data","exportNoteID","id","noteIndex","findIndex","item","type","unshift","splice","startRealtimeExportNote","ref","unSubscribe","noteDoc","exists","value","getExportNoteById","noteID","Error","noteRef","getDoc","noteSnap","getExportNoteList","noteIDList","queryExportNoteList","map","Promise","all","exportNoteSnapList","addExportNotePending","noteData","MyFormatDateTime","setDoc","status","createdAt","updatedAt","removedAt","processExportNote","runTransaction","transaction","exportNoteRef","get","queryGoodsRefList","Object","keys","stockOut","goodsID","goodsDocList","goodsDoc","stockAvail","goodsName","entries","batch","quantity","update","exportNoteIDList","arrayUnion","customer","customerID","increment","finance","debt","refundExportNote","listBatchUpdate","batchKey","each","arrayRemove","payDebtExportNote","number","updateExportNotePending","updateDoc","deleteExportNote","deleteDoc","getExportNoteListHasDebtByCustomerID","queryNoteList","getDocs","noteListHasDebt","push","$","$map","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","target","proto","forced","callbackfn","this","arguments","length","undefined","class","colspan","searchText","handleSearchText","placeholder","redirectExportNoteCreate","icon","exportNoteFilter","note","key","redirectExportNoteDetails","style","customerName","shipping","unit","payment","method","revenue","formatDateTime","$router","components","PlusOutlined","setup","computed","filter","methods","e","name","params","mode","time","__exports__","render"],"mappings":"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","file":"js/chunk-62c06cd7.5abdd8bb.js","sourcesContent":["import {\n\tgetFirestore,\n\tonSnapshot,\n\tcollection,\n\tdoc,\n\tgetDoc,\n\tgetDocs,\n\tsetDoc,\n\tupdateDoc,\n\tdeleteDoc,\n\tquery,\n\twhere,\n\torderBy,\n\trunTransaction,\n\tincrement,\n\tarrayUnion,\n\tarrayRemove,\n} from 'firebase/firestore'\nimport { ref, reactive } from 'vue'\nimport { MyFormatDateTime } from '@/utils/convert'\n\nconst getYear = new Date().getFullYear()\nconst getMonth = new Date().getMonth() + 1\nconst firstDayOfMonth = new Date(getYear + '-' + getMonth).getTime()\nconst exportNoteArray = reactive([])\nconst db = getFirestore()\nconst qr = query(collection(db, 'EXPORTNOTE'), where('updatedAt', '>', firstDayOfMonth), orderBy('updatedAt', 'asc'))\n\nonSnapshot(qr, snapshot => {\n\tsnapshot.docChanges().forEach(change => {\n\t\tconst newNote = {\n\t\t\t...change.doc.data(),\n\t\t\texportNoteID: change.doc.id,\n\t\t}\n\t\tconst noteIndex = exportNoteArray.findIndex(item => item.exportNoteID === change.doc.id)\n\t\tif (change.type === 'added') {\n\t\t\texportNoteArray.unshift(newNote)\n\t\t} else if (change.type === 'modified') {\n\t\t\texportNoteArray.splice(noteIndex, 1, newNote)\n\t\t} else if (change.type === 'removed') {\n\t\t\texportNoteArray.splice(noteIndex, 1)\n\t\t}\n\t})\n})\n\nconst startRealtimeExportNote = exportNoteID => {\n\tconst data = ref({})\n\tconst unSubscribe = onSnapshot(doc(db, 'EXPORTNOTE', exportNoteID), async noteDoc => {\n\t\tif (!noteDoc.exists()) return\n\t\tdata.value = {\n\t\t\t...noteDoc.data(),\n\t\t\texportNoteID,\n\t\t}\n\t})\n\treturn { data, unSubscribe }\n}\n\nconst getExportNoteById = async noteID => {\n\tif (!noteID) throw new Error('ID must not be empty')\n\tconst noteRef = doc(db, 'EXPORTNOTE', noteID)\n\tconst noteSnap = await getDoc(noteRef)\n\tif (!noteSnap.exists()) throw new Error('ExportNote not found !!!')\n\treturn {\n\t\t...noteSnap.data(),\n\t\texportNoteID: noteSnap.id,\n\t}\n}\n\nconst getExportNoteList = async noteIDList => {\n\tconst queryExportNoteList = noteIDList.map(noteID => getDoc(doc(db, 'EXPORTNOTE', noteID)))\n\tconst exportNoteSnapList = await Promise.all(queryExportNoteList)\n\treturn exportNoteSnapList.map(noteSnap => ({\n        ...noteSnap.data(),\n\t\texportNoteID: noteSnap.id,\n\t}))\n}\n\nconst addExportNotePending = async noteData => {\n\tconst noteID = MyFormatDateTime(new Date(), 'YY-MM-DD-HH-mm-ss')\n\tconst noteRef = doc(db, 'EXPORTNOTE', noteID)\n\tconst noteSnap = await getDoc(noteRef)\n\tif (noteSnap.exists()) throw new Error('Phiếu nhập này đã tồn tại')\n\n\tawait setDoc(noteRef, {\n\t\t...noteData,\n\t\tstatus: 'Pending',\n\n\t\tcreatedAt: new Date().getTime(),\n\t\tupdatedAt: new Date().getTime(),\n\t\tremovedAt: 0,\n\t})\n\n\treturn noteRef.id\n}\n\nconst processExportNote = async noteID => {\n\tawait runTransaction(db, async transaction => {\n\t\t// transaction get export note\n\t\tconst exportNoteRef = doc(db, 'EXPORTNOTE', noteID)\n\t\tconst noteDoc = await transaction.get(exportNoteRef)\n\t\tif (!noteDoc.exists()) throw new Error('Document not exists')\n\t\tconst { ...noteData } = noteDoc.data()\n\t\tif (noteData.status !== 'Pending') {\n\t\t\tthrow new Error('Notes is not in pending status')\n\t\t}\n\n\t\t// transaction get all Goods Data\n\t\tconst queryGoodsRefList = Object.keys(noteData.stockOut).map(goodsID =>\n\t\t\ttransaction.get(doc(db, 'WAREHOUSE', goodsID)),\n\t\t)\n\t\tconst goodsDocList = await Promise.all(queryGoodsRefList)\n\n\t\t// transaction update stock avail in every goods in warehouse\n\t\tgoodsDocList.forEach(goodsDoc => {\n\t\t\tconst { stockAvail, goodsName } = goodsDoc.data() || {}\n\t\t\tObject.entries(noteData.stockOut[goodsDoc.id]).forEach(([batch, { quantity }]) => {\n\t\t\t\tif (!stockAvail[batch]) {\n\t\t\t\t\tthrow new Error(`${goodsName} with ${batch} are not available in warehouse`)\n\t\t\t\t}\n\t\t\t\tif (stockAvail[batch].quantity < quantity) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`${goodsName} available is ${stockAvail[batch].quantity}. But, you have just export ${quantity}`,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\tif (stockAvail[batch].quantity === quantity) {\n\t\t\t\t\tdelete stockAvail[batch]\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tstockAvail[batch].quantity -= quantity\n\t\t\t})\n\t\t\ttransaction.update(doc(db, 'WAREHOUSE', goodsDoc.id), {\n\t\t\t\tstockAvail,\n\t\t\t\texportNoteIDList: arrayUnion(noteID),\n\t\t\t})\n\t\t})\n\n\t\t// transaction update customer\n\t\ttransaction.update(doc(db, 'CUSTOMER', noteData.customer.customerID), {\n\t\t\texportNoteIDList: arrayUnion(noteID),\n\t\t\t'finance.debt': increment(noteData.finance.debt),\n\t\t})\n\n\t\ttransaction.update(exportNoteRef, {\n\t\t\tstatus: 'Success',\n\t\t\tupdatedAt: new Date().getTime(),\n\t\t})\n\t})\n}\n\nconst refundExportNote = async noteID => {\n\tawait runTransaction(db, async transaction => {\n\t\tconst exportNoteRef = doc(db, 'EXPORTNOTE', noteID)\n\t\tconst noteDoc = await transaction.get(exportNoteRef)\n\t\tif (!noteDoc.exists()) throw new Error('Document not exists')\n\t\tconst { ...noteData } = noteDoc.data()\n\t\tif (noteData.status !== 'Success') {\n\t\t\tthrow new Error('Notes is not in success status')\n\t\t}\n\t\tObject.entries(noteData.stockOut).forEach(([goodsID, batch]) => {\n\t\t\tconst listBatchUpdate = {}\n\t\t\tObject.entries(batch).forEach(([batchKey, { quantity }]) => {\n\t\t\t\tconst each = 'stockAvail.' + batchKey + '.quantity'\n\t\t\t\tlistBatchUpdate[each] = increment(quantity)\n\t\t\t})\n\t\t\ttransaction.update(doc(db, 'WAREHOUSE', goodsID), {\n\t\t\t\t...listBatchUpdate,\n\t\t\t\texportNoteIDList: arrayRemove(noteID),\n\t\t\t})\n\t\t})\n\n\t\ttransaction.update(doc(db, 'CUSTOMER', noteData.customer.customerID), {\n\t\t\texportNoteIDList: arrayRemove(noteID),\n\t\t\t'finance.debt': increment(0 - noteData.finance.debt),\n\t\t})\n\t\ttransaction.update(exportNoteRef, {\n\t\t\tstatus: 'Pending',\n\t\t\tupdatedAt: new Date().getTime(),\n\t\t})\n\t})\n}\n\nconst payDebtExportNote = async (noteID, number) => {\n\tawait runTransaction(db, async transaction => {\n\t\t// transaction get export note\n\t\tconst exportNoteRef = doc(db, 'EXPORTNOTE', noteID)\n\t\tconst noteDoc = await transaction.get(exportNoteRef)\n\t\tif (!noteDoc.exists()) throw new Error('Document not exists')\n\t\tconst { ...noteData } = noteDoc.data()\n\t\tif (noteData.status !== 'Success') {\n\t\t\tthrow new Error('Notes is not in success status')\n\t\t}\n\n\t\ttransaction.update(exportNoteRef, {\n\t\t\t'finance.debt': increment(0 - number),\n\t\t})\n\t\ttransaction.update(doc(db, 'CUSTOMER', noteData.customer.customerID), {\n\t\t\t'finance.debt': increment(0 - number),\n\t\t})\n\t})\n}\n\nconst updateExportNotePending = async (noteID, noteData) => {\n\tif (!noteID) throw new Error('ID must not be empty')\n\tconst noteRef = doc(db, 'EXPORTNOTE', noteID)\n\tconst noteSnap = await getDoc(noteRef)\n\tif (!noteSnap.exists()) throw new Error('ExportNote not found !!!')\n\tif (noteSnap.data().status !== 'Pending') throw new Error('Notes is not in pending status')\n\n\tawait updateDoc(noteRef, {\n\t\t...noteData,\n\t\tupdatedAt: new Date().getTime(),\n\t})\n\treturn noteID\n}\n\nconst deleteExportNote = async noteID => {\n\tif (!noteID) throw new Error('ID must not be empty')\n\tconst noteRef = doc(db, 'EXPORTNOTE', noteID)\n\tconst noteSnap = await getDoc(noteRef)\n\tif (!noteSnap.exists()) throw new Error('ExportNote not found !!!')\n\tif (noteSnap.data().status !== 'Pending') throw new Error('Notes is not in pending status')\n\n\tawait deleteDoc(doc(db, 'EXPORTNOTE', noteID))\n}\n\nconst getExportNoteListHasDebtByCustomerID = async customerID => {\n\tconst queryNoteList = query(\n\t\tcollection(db, 'EXPORTNOTE'),\n\t\twhere('customer.customerID', '==', customerID),\n\t\twhere('status', '==', 'Success'),\n\t\twhere('finance.debt', '>', 0),\n\t)\n\tconst exportNoteSnapList = await getDocs(queryNoteList)\n\tconst noteListHasDebt = []\n\texportNoteSnapList.forEach(noteSnap => {\n\t\tnoteListHasDebt.push({ exportNoteID: noteSnap.id, ...noteSnap.data() })\n\t})\n\treturn noteListHasDebt\n}\nexport {\n\texportNoteArray,\n\tgetExportNoteList,\n\tgetExportNoteListHasDebtByCustomerID,\n\tstartRealtimeExportNote,\n\tgetExportNoteById,\n\taddExportNotePending,\n\tprocessExportNote,\n\trefundExportNote,\n\tupdateExportNotePending,\n\tpayDebtExportNote,\n\tdeleteExportNote,\n}\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ExportNoteList.vue?vue&type=style&index=0&id=8ab1317a&lang=scss&scoped=true\"","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","<template>\n\t<h1 class=\"title-content\">Danh sách đơn hàng</h1>\n\t<div class=\"flex justify-between mb-2 items-center\">\n\t\t<div class=\"input-text\">\n\t\t\t<input :value=\"searchText\" @input=\"handleSearchText\" type=\"text\" placeholder=\"Search...\" />\n\t\t</div>\n\t\t<a-button type=\"primary\" @click=\"redirectExportNoteCreate\">\n\t\t\t<template #icon>\n\t\t\t\t<PlusOutlined />\n\t\t\t</template>\n\t\t\tTạo Mới\n\t\t</a-button>\n\t</div>\n\t<div>\n\t\t<table class=\"table\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>#</th>\n\t\t\t\t\t<th>KH</th>\n\t\t\t\t\t<th>Ship</th>\n\t\t\t\t\t<th>T.Toán</th>\n\t\t\t\t\t<th>Tổng</th>\n\t\t\t\t\t<th>Nợ</th>\n\t\t\t\t\t<th>Ngày</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody class=\"text-right\">\n\t\t\t\t<tr v-if=\"exportNoteFilter.length === 0\">\n\t\t\t\t\t<td colspan=\"10\" class=\"text-center\">No data available in table</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr\n\t\t\t\t\tv-for=\"(note, noteIndex) in exportNoteFilter\"\n\t\t\t\t\t:key=\"noteIndex\"\n\t\t\t\t\t@dblclick=\"redirectExportNoteDetails(note.exportNoteID)\"\n\t\t\t\t\t:style=\"note.status === 'Pending' ? 'color: blue; opacity: 0.7' : ''\"\n\t\t\t\t>\n\t\t\t\t\t<td class=\"text-center\">{{ exportNoteFilter.length - noteIndex }}</td>\n\t\t\t\t\t<td class=\"text-left\">{{ note.customer?.customerName || '-' }}</td>\n\t\t\t\t\t<td class=\"text-left\">{{ note.shipping.unit }}</td>\n\t\t\t\t\t<td class=\"text-left\">{{ note.payment.method }}</td>\n\t\t\t\t\t<td>{{ note.finance.revenue }}</td>\n\t\t\t\t\t<td :style=\"(note.status === 'Success') & (note.finance.debt > 0) ? 'color: red' : ''\">\n\t\t\t\t\t\t{{ note.finance.debt }}\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>{{ formatDateTime(note.updatedAt) }}</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"mt-4\">\n\t\t<a-button @click=\"$router.push({ name: 'Dashboard', params: {} })\">Back</a-button>\n\t</div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { PlusOutlined } from '@ant-design/icons-vue'\nimport { exportNoteArray } from '@/firebase/useExportNote'\nimport { MyFormatDateTime, MySearch } from '@/utils/convert'\n\nexport default {\n\tcomponents: { PlusOutlined },\n\tsetup() {\n\t\treturn {\n\t\t\texportNoteArray,\n\t\t\tsearchText: ref(''),\n\t\t}\n\t},\n\tcomputed: {\n\t\texportNoteFilter() {\n\t\t\treturn this.exportNoteArray.filter(note => MySearch(note.customer.customerName, this.searchText))\n\t\t},\n\t},\n\tmethods: {\n\t\thandleSearchText(e) {\n\t\t\tthis.searchText = e.target.value\n\t\t},\n\t\tredirectExportNoteCreate() {\n\t\t\tthis.$router.push({\n\t\t\t\tname: 'ExportNote Create Modify',\n\t\t\t\tparams: { mode: 'create' },\n\t\t\t})\n\t\t},\n\t\tredirectExportNoteDetails(noteID) {\n\t\t\tthis.$router.push({\n\t\t\t\tname: 'ExportNote Details',\n\t\t\t\tparams: { id: noteID },\n\t\t\t})\n\t\t},\n\t\tformatDateTime(time) {\n\t\t\treturn MyFormatDateTime(time, 'DD/MM/YY')\n\t\t},\n\t},\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.input-text {\n\twidth: 400px;\n\tmax-width: 50%;\n}\n</style>\n","import { render } from \"./ExportNoteList.vue?vue&type=template&id=8ab1317a&scoped=true\"\nimport script from \"./ExportNoteList.vue?vue&type=script&lang=js\"\nexport * from \"./ExportNoteList.vue?vue&type=script&lang=js\"\n\nimport \"./ExportNoteList.vue?vue&type=style&index=0&id=8ab1317a&lang=scss&scoped=true\"\n\nimport exportComponent from \"D:\\\\Projects\\\\bstrang-vn\\\\bstrang-vn--vuejs\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-8ab1317a\"]])\n\nexport default __exports__"],"sourceRoot":""}