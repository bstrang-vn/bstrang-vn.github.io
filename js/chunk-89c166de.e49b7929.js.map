{"version":3,"sources":["webpack:///./src/firebase/useImportNote.js","webpack:///./src/components/common/ModalCreateModifyProvider.vue?0c9f","webpack:///./src/components/provider/ProviderDetails.vue","webpack:///./src/components/provider/ProviderDetails.vue?2773","webpack:///./src/firebase/useProvider.js","webpack:///./src/components/common/ModalCreateModifyProvider.vue","webpack:///./src/components/common/ModalCreateModifyProvider.vue?3af3","webpack:///./node_modules/core-js/modules/es.array.map.js"],"names":["getYear","Date","getFullYear","getMonth","firstDayOfMonth","getTime","importNoteArray","reactive","db","getFirestore","qr","query","collection","where","orderBy","onSnapshot","snapshot","docChanges","forEach","change","newNote","doc","data","importNoteID","id","noteIndex","findIndex","item","type","unshift","splice","startRealtimeImportNote","ref","unSubscribe","noteDoc","exists","value","getImportNoteById","noteID","Error","noteRef","getDoc","noteSnap","getImportNoteList","noteIDList","queryImportNoteList","map","Promise","all","importNoteSnapList","addImportNotePending","noteData","MyFormatDateTime","setDoc","status","createdAt","updatedAt","removedAt","processImportNote","runTransaction","transaction","importNoteRef","get","Object","entries","stockIn","goodsID","batch","listBatchUpdate","batchKey","quantity","each","increment","update","importNoteIDList","arrayUnion","provider","providerID","refundImportNote","queryGoodsRefList","keys","goodsDocList","goodsDoc","stockAvail","goodsName","arrayRemove","updateImportNotePending","updateDoc","deleteImportNote","deleteDoc","class","colspan","providerName","phone","address","$refs","modalProviderCreateModify","openModal","importNoteList","length","key","$router","push","formatDateTime","finance","totalMoney","go","confirmDeleteProvider","loading","loadingDeleteProvider","components","ModalProviderCreateModify","setup","route","realtimeProvider","params","unmounted","this","watch","handler","after","before","reverse","deep","methods","startDeleteProvider","name","message","success","console","error","toString","$notification","open","description","placement","duration","that","confirm","title","icon","ExclamationCircleOutlined","content","onOk","time","__exports__","render","providerArray","newProvider","providerIndex","startRealtimeProvider","providerDoc","getProvider","providerRef","providerSnap","addProvider","addDoc","updateProvider","providerData","deleteProvider","visible","visibleModal","width","confirm-loading","confirmModalLoading","afterClose","refreshModal","handleActionProviderOk","$emit","log","$","$map","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","target","proto","forced","callbackfn","arguments","undefined"],"mappings":"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","file":"js/chunk-89c166de.e49b7929.js","sourcesContent":["import {\n\tgetFirestore,\n\tonSnapshot,\n\tcollection,\n\tdoc,\n\tgetDoc,\n\tgetDocs,\n\tsetDoc,\n\tupdateDoc,\n\tdeleteDoc,\n\tquery,\n\twhere,\n\torderBy,\n\trunTransaction,\n\tincrement,\n\tarrayUnion,\n\tarrayRemove,\n} from 'firebase/firestore'\nimport { ref, reactive } from 'vue'\nimport { MyFormatDateTime } from '@/utils/convert'\n\nconst getYear = new Date().getFullYear()\nconst getMonth = new Date().getMonth() + 1\nconst firstDayOfMonth = new Date(getYear + '-' + getMonth).getTime()\nconst importNoteArray = reactive([])\nconst db = getFirestore()\nconst qr = query(collection(db, 'IMPORTNOTE'), where('updatedAt', '>', firstDayOfMonth), orderBy('updatedAt', 'asc'))\n\nonSnapshot(qr, snapshot => {\n\tsnapshot.docChanges().forEach(change => {\n\t\tconst newNote = {\n\t\t\t...change.doc.data(),\n\t\t\timportNoteID: change.doc.id,\n\t\t}\n\t\tconst noteIndex = importNoteArray.findIndex(item => item.importNoteID === change.doc.id)\n\t\tif (change.type === 'added') {\n\t\t\timportNoteArray.unshift(newNote)\n\t\t} else if (change.type === 'modified') {\n\t\t\timportNoteArray.splice(noteIndex, 1, newNote)\n\t\t} else if (change.type === 'removed') {\n\t\t\timportNoteArray.splice(noteIndex, 1)\n\t\t}\n\t})\n})\n\nconst startRealtimeImportNote = importNoteID => {\n\tconst data = ref({})\n\tconst unSubscribe = onSnapshot(doc(db, 'IMPORTNOTE', importNoteID), async noteDoc => {\n\t\tif (!noteDoc.exists()) return\n\t\tdata.value = {\n\t\t\t...noteDoc.data(),\n\t\t\timportNoteID,\n\t\t}\n\t})\n\treturn { data, unSubscribe }\n}\n\nconst getImportNoteById = async noteID => {\n\tif (!noteID) throw new Error('ID must not be empty')\n\tconst noteRef = doc(db, 'IMPORTNOTE', noteID)\n\tconst noteSnap = await getDoc(noteRef)\n\tif (!noteSnap.exists()) throw new Error('ImportNote not found !!!')\n\treturn {\n\t\t...noteSnap.data(),\n\t\timportNoteID: noteSnap.id,\n\t}\n}\n\nconst getImportNoteList = async noteIDList => {\n\tconst queryImportNoteList = noteIDList.map(noteID => getDoc(doc(db, 'IMPORTNOTE', noteID)))\n\tconst importNoteSnapList = await Promise.all(queryImportNoteList)\n\treturn importNoteSnapList.map(noteSnap => ({\n\t\t...noteSnap.data(),\n\t\timportNoteID: noteSnap.id,\n\t}))\n}\n\nconst addImportNotePending = async noteData => {\n\tconst noteID = MyFormatDateTime(new Date(), 'YY-MM-DD-HH-mm-ss')\n\tconst noteRef = doc(db, 'IMPORTNOTE', noteID)\n\tconst noteSnap = await getDoc(noteRef)\n\tif (noteSnap.exists()) throw new Error('Phiếu nhập này đã tồn tại')\n\n\tawait setDoc(noteRef, {\n\t\t...noteData,\n\t\tstatus: 'Pending',\n\n\t\tcreatedAt: new Date().getTime(),\n\t\tupdatedAt: new Date().getTime(),\n\t\tremovedAt: 0,\n\t})\n\n\treturn noteRef.id\n}\n\nconst processImportNote = async noteID => {\n\tawait runTransaction(db, async transaction => {\n\t\t// transaction get import note\n\t\tconst importNoteRef = doc(db, 'IMPORTNOTE', noteID)\n\t\tconst noteDoc = await transaction.get(importNoteRef)\n\t\tif (!noteDoc.exists()) throw new Error('Document not exists')\n\t\tconst { ...noteData } = noteDoc.data()\n\t\tif (noteData.status !== 'Pending') {\n\t\t\tthrow new Error('Notes is not in pending status')\n\t\t}\n\n\t\t// transaction get all Goods Data\n\t\tObject.entries(noteData.stockIn).forEach(([goodsID, batch]) => {\n\t\t\tconst listBatchUpdate = {}\n\t\t\tObject.entries(batch).forEach(([batchKey, { quantity }]) => {\n\t\t\t\tconst each = 'stockAvail.' + batchKey + '.quantity'\n\t\t\t\tlistBatchUpdate[each] = increment(quantity)\n\t\t\t})\n\t\t\ttransaction.update(doc(db, 'WAREHOUSE', goodsID), {\n\t\t\t\t...listBatchUpdate,\n\t\t\t\timportNoteIDList: arrayUnion(importNoteRef.id),\n\t\t\t})\n\t\t})\n\n\t\t// transaction update provider\n\t\ttransaction.update(doc(db, 'PROVIDER', noteData.provider.providerID), {\n\t\t\timportNoteIDList: arrayUnion(noteID),\n\t\t})\n\n\t\ttransaction.update(importNoteRef, {\n\t\t\tstatus: 'Success',\n\t\t})\n\t})\n}\n\nconst refundImportNote = async noteID => {\n\tawait runTransaction(db, async transaction => {\n\t\tconst importNoteRef = doc(db, 'IMPORTNOTE', noteID)\n\t\tconst noteDoc = await transaction.get(importNoteRef)\n\t\tif (!noteDoc.exists()) throw new Error('Document not exists')\n\t\tconst { ...noteData } = noteDoc.data()\n\t\tif (noteData.status !== 'Success') {\n\t\t\tthrow new Error('Notes is not in success status')\n\t\t}\n\n\t\t// transaction get all Goods Data\n\t\tconst queryGoodsRefList = Object.keys(noteData.stockIn).map(goodsID =>\n\t\t\ttransaction.get(doc(db, 'WAREHOUSE', goodsID)),\n\t\t)\n\t\tconst goodsDocList = await Promise.all(queryGoodsRefList)\n\n\t\t// transaction update stock avail in every goods in warehouse\n\t\tgoodsDocList.forEach(goodsDoc => {\n\t\t\tconst { stockAvail, goodsName } = goodsDoc.data() || {}\n\t\t\tObject.entries(noteData.stockIn[goodsDoc.id]).forEach(([batch, { quantity }]) => {\n\t\t\t\tif (!stockAvail[batch]) {\n\t\t\t\t\tthrow new Error(`${goodsName} with ${batch} are not available in warehouse`)\n\t\t\t\t}\n\t\t\t\tif (stockAvail[batch].quantity < quantity) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`${goodsName} available is ${stockAvail[batch].quantity}. But, you have just export ${quantity}`,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\tif (stockAvail[batch].quantity === quantity) {\n\t\t\t\t\tdelete stockAvail[batch]\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tstockAvail[batch].quantity -= quantity\n\t\t\t})\n\t\t\ttransaction.update(doc(db, 'WAREHOUSE', goodsDoc.id), {\n\t\t\t\tstockAvail,\n\t\t\t\timportNoteIDList: arrayRemove(noteID),\n\t\t\t})\n\t\t})\n\n\t\ttransaction.update(doc(db, 'PROVIDER', noteData.provider.providerID), {\n\t\t\timportNoteIDList: arrayRemove(noteID),\n\t\t})\n\t\ttransaction.update(importNoteRef, {\n\t\t\tstatus: 'Pending',\n\t\t})\n\t})\n}\n\nconst updateImportNotePending = async (noteID, noteData) => {\n\tif (!noteID) throw new Error('ID must not be empty')\n\tconst noteRef = doc(db, 'IMPORTNOTE', noteID)\n\tconst noteSnap = await getDoc(noteRef)\n\tif (!noteSnap.exists()) throw new Error('ImportNote not found !!!')\n\tif (noteSnap.data().status !== 'Pending') throw new Error('Notes is not in pending status')\n\n\tawait updateDoc(noteRef, {\n\t\t...noteData,\n\t\tupdatedAt: new Date().getTime(),\n\t})\n\treturn noteID\n}\n\nconst deleteImportNote = async noteID => {\n\tawait deleteDoc(doc(db, 'IMPORTNOTE', noteID))\n}\n\nexport {\n\timportNoteArray,\n\tstartRealtimeImportNote,\n\tgetImportNoteById,\n\tgetImportNoteList,\n\taddImportNotePending,\n\tprocessImportNote,\n\trefundImportNote,\n\tupdateImportNotePending,\n\tdeleteImportNote,\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ModalCreateModifyProvider.vue?vue&type=style&index=0&id=62472f8a&lang=scss&scoped=true\"","<template>\n\t<h1 class=\"title-content\">Thông tin nhà cung cấp</h1>\n\t<div>\n\t\t<div class=\"flex\">\n\t\t\t<div class=\"w-10\">Tên</div>\n\t\t\t<div class=\"w-3\">:</div>\n\t\t\t<div>{{ provider.providerName }}</div>\n\t\t</div>\n\t\t<div class=\"flex\">\n\t\t\t<div class=\"w-10\">SĐT</div>\n\t\t\t<div class=\"w-3\">:</div>\n\t\t\t<div>{{ provider.phone }}</div>\n\t\t</div>\n\t\t<div class=\"flex\">\n\t\t\t<div class=\"w-10\">Đ/c</div>\n\t\t\t<div class=\"w-3\">:</div>\n\t\t\t<div>{{ provider.address }}</div>\n\t\t</div>\n\t\t<div>\n\t\t\t<a-button @click=\"$refs.modalProviderCreateModify.openModal(provider.providerID)\">\n\t\t\t\tEdit\n\t\t\t</a-button>\n\t\t\t<ModalProviderCreateModify ref=\"modalProviderCreateModify\" />\n\t\t</div>\n\t</div>\n\n\t<div class=\"mt-4 mb-1 font-bold\">Danh sách phiếu nhập hàng</div>\n\t<div class=\"wrapper-table\">\n\t\t<table class=\"table\">\n\t\t\t<thead>\n\t\t\t\t<th>#</th>\n\t\t\t\t<th>Ngày</th>\n\t\t\t\t<th>Tổng tiền</th>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<tr v-if=\"importNoteList.length === 0\">\n\t\t\t\t\t<td class=\"text-center\" colspan=\"7\">No data available in table</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr\n\t\t\t\t\tv-for=\"(noteData, noteIndex) in importNoteList\"\n\t\t\t\t\t:key=\"noteIndex\"\n\t\t\t\t\t@click=\"$router.push({ name: 'ImportNote Details', params: { id: noteData.noteID } })\"\n\t\t\t\t>\n\t\t\t\t\t<td class=\"text-center\">{{ noteIndex + 1 }}</td>\n\t\t\t\t\t<td class=\"text-right\">{{ formatDateTime(noteData.createdAt) }}</td>\n\t\t\t\t\t<td class=\"text-right font-bold\">{{ noteData.finance.totalMoney }}</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\t<div class=\"flex justify-between mt-4\">\n\t\t<a-button @click=\"$router.go(-1)\">Back</a-button>\n\t\t<a-button\n\t\t\tv-if=\"provider.importNoteIDList?.length === 0\"\n\t\t\t@click=\"confirmDeleteProvider\"\n\t\t\t:loading=\"loadingDeleteProvider\"\n\t\t\ttype=\"dashed\"\n\t\t>\n\t\t\tDelete\n\t\t</a-button>\n\t</div>\n</template>\n\n<script>\nimport { ref, createVNode } from 'vue'\nimport { useRoute } from 'vue-router'\nimport { Modal, message } from 'ant-design-vue'\nimport { ExclamationCircleOutlined } from '@ant-design/icons-vue'\nimport { startRealtimeProvider, deleteProvider } from '@/firebase/useProvider'\nimport { getImportNoteList } from '@/firebase/useImportNote'\nimport ModalProviderCreateModify from '@/components/common/ModalCreateModifyProvider.vue'\nimport { MyFormatDateTime } from '@/utils/convert'\n\nexport default {\n\tcomponents: { ModalProviderCreateModify },\n\tsetup() {\n\t\tconst route = useRoute()\n\t\tconst realtimeProvider = startRealtimeProvider(route.params.id)\n\t\treturn {\n\t\t\tprovider: realtimeProvider.data,\n\t\t\trealtimeProvider,\n\t\t\timportNoteList: ref([]),\n\t\t\tloadingDeleteProvider: ref(false),\n\t\t}\n\t},\n\tunmounted() {\n\t\tthis.realtimeProvider.unSubscribe()\n\t},\n\twatch: {\n\t\t'provider.importNoteIDList': {\n\t\t\tasync handler(after, before) {\n\t\t\t\tthis.importNoteList = (await getImportNoteList(after)).reverse()\n\t\t\t},\n\t\t\tdeep: true,\n\t\t},\n\t},\n\tmethods: {\n\t\tasync startDeleteProvider() {\n\t\t\tthis.loadingDeleteProvider = true\n\t\t\ttry {\n\t\t\t\tthis.realtimeProvider.unSubscribe()\n\t\t\t\tawait deleteProvider(this.provider.providerID)\n\t\t\t\tthis.$router.push({ name: 'Provider List', params: {} })\n\t\t\t\tmessage.success('Delete provider success !!!', 2)\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error)\n\t\t\t\tmessage.error(error.toString(), 10)\n\t\t\t} finally {\n\t\t\t\tthis.loadingDeleteProvider = false\n\t\t\t}\n\t\t},\n\t\tconfirmDeleteProvider() {\n\t\t\tif (this.provider.importNoteIDList.length > 0) {\n\t\t\t\tthis.$notification.open({\n\t\t\t\t\tmessage: 'Lỗi !!!',\n\t\t\t\t\tdescription: 'Phiếu nhập hàng của nhà cung cấp này vẫn tồn tại. Không thể xóa nhà cung cấp này',\n\t\t\t\t\tplacement: 'topRight',\n\t\t\t\t\tduration: 5,\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst that = this\n\t\t\tModal.confirm({\n\t\t\t\ttitle: 'Confirm',\n\t\t\t\ticon: createVNode(ExclamationCircleOutlined),\n\t\t\t\tcontent: 'Bạn có chắc chắn muốn xóa nhà cung cấp này ?',\n\t\t\t\tonOk() {\n\t\t\t\t\tthat.startDeleteProvider()\n\t\t\t\t},\n\t\t\t})\n\t\t},\n\t\tformatDateTime(time) {\n\t\t\treturn MyFormatDateTime(time, 'DD/MM/YY')\n\t\t},\n\t},\n}\n</script>\n","import { render } from \"./ProviderDetails.vue?vue&type=template&id=58364679\"\nimport script from \"./ProviderDetails.vue?vue&type=script&lang=js\"\nexport * from \"./ProviderDetails.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\Projects\\\\bstrang-vn\\\\bstrang-vn--vuejs\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {\n\tgetFirestore,\n\tonSnapshot,\n\tcollection,\n\tdoc,\n\tgetDoc,\n\taddDoc,\n\tupdateDoc,\n\tdeleteDoc,\n\tquery,\n} from 'firebase/firestore'\nimport { reactive, ref } from 'vue'\n\nconst providerArray = reactive([])\nconst db = getFirestore()\nconst qr = query(collection(db, 'PROVIDER'))\n\nonSnapshot(qr, snapshot => {\n\tsnapshot.docChanges().forEach(change => {\n\t\tconst newProvider = {\n\t\t\tproviderID: change.doc.id,\n\t\t\t...change.doc.data(),\n\t\t}\n\t\tconst providerIndex = providerArray.findIndex(item => item.providerID === change.doc.id)\n\t\tif (change.type === 'added') {\n\t\t\tproviderArray.push(newProvider)\n\t\t} else if (change.type === 'modified') {\n\t\t\tproviderArray.splice(providerIndex, 1, newProvider)\n\t\t} else if (change.type === 'removed') {\n\t\t\tproviderArray.splice(providerIndex, 1)\n\t\t}\n\t})\n})\n\nconst startRealtimeProvider = providerID => {\n\tconst data = ref({})\n\tconst unSubscribe = onSnapshot(doc(db, 'PROVIDER', providerID), async providerDoc => {\n\t\tif (!providerDoc.exists()) return\n\t\tdata.value = {\n\t\t\tproviderID,\n\t\t\t...providerDoc.data(),\n\t\t}\n\t})\n\treturn { data, unSubscribe }\n}\n\nconst getProvider = async providerID => {\n\tconst providerRef = doc(db, 'PROVIDER', providerID)\n\tconst providerSnap = await getDoc(providerRef)\n\tif (!providerSnap.exists()) return {}\n\tconst { providerName, phone, address, importNoteIDList } = providerSnap.data()\n\treturn {\n\t\tproviderID,\n\t\tproviderName,\n\t\tphone,\n\t\taddress,\n\t\timportNoteIDList,\n\t}\n}\n\nconst addProvider = async data => {\n\tconst providerRef = await addDoc(collection(db, 'PROVIDER'), {\n\t\tproviderName: data.providerName,\n\t\tphone: data.phone,\n\t\taddress: data.address,\n\t\timportNoteIDList: [],\n\n\t\tcreatedAt: new Date().getTime(),\n\t\tupdatedAt: new Date().getTime(),\n\t\tremovedAt: 0,\n\t})\n\n\tconst provider = await getProvider(providerRef.id)\n\treturn provider\n}\n\nconst updateProvider = async (providerID, providerData) => {\n\tconst providerRef = doc(db, 'PROVIDER', providerID)\n\tawait updateDoc(providerRef, {\n\t\tproviderName: providerData.providerName,\n\t\tphone: providerData.phone,\n\t\taddress: providerData.address,\n\n\t\tupdatedAt: new Date().getTime(),\n\t})\n\n\tconst provider = await getProvider(providerRef.id)\n\treturn provider\n}\n\nconst deleteProvider = async providerID => {\n\tawait deleteDoc(doc(db, 'PROVIDER', providerID))\n\treturn providerID\n}\n\nexport {\n\tproviderArray,\n\tstartRealtimeProvider,\n\taddProvider,\n\tdeleteProvider,\n\tupdateProvider,\n\tgetProvider,\n}\n","<template>\n\t<a-modal\n\t\tv-model:visible=\"visibleModal\"\n\t\twidth=\"900px\"\n\t\t:title=\"provider.providerID ? 'Update Provider' : 'Create New Provider'\"\n\t\t:confirm-loading=\"confirmModalLoading\"\n\t\t:afterClose=\"refreshModal\"\n\t\t@ok=\"handleActionProviderOk\"\n\t>\n\t\t<form>\n\t\t\t<div class=\"flex items-center mb-2\">\n\t\t\t\t<div class=\"w-100px flex-none\">Name</div>\n\t\t\t\t<a-input v-model:value=\"provider.providerName\" class=\"flex-auto\" />\n\t\t\t</div>\n\t\t\t<div class=\"flex items-center mb-2\">\n\t\t\t\t<div class=\"w-100px flex-none\">Phone</div>\n\t\t\t\t<a-input v-model:value=\"provider.phone\" class=\"flex-auto\" />\n\t\t\t</div>\n\t\t\t<div class=\"flex items-center mb-2\">\n\t\t\t\t<div class=\"w-100px flex-none\">Address</div>\n\t\t\t\t<a-input v-model:value=\"provider.address\" class=\"flex-auto\" />\n\t\t\t</div>\n\t\t</form>\n\t</a-modal>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { getProvider, addProvider, updateProvider } from '@/firebase/useProvider'\n\nexport default {\n\tsetup() {\n\t\treturn {\n\t\t\tvisibleModal: ref(false),\n\t\t\tconfirmModalLoading: ref(false),\n\t\t\tprovider: ref({ providerID: '', providerName: '', phone: '', address: '' }),\n\t\t}\n\t},\n\tmethods: {\n\t\tasync openModal(providerID) {\n\t\t\tthis.visibleModal = true\n\t\t\tif (providerID) {\n\t\t\t\tconst data = await getProvider(providerID)\n\t\t\t\tthis.provider.providerID = data.providerID\n\t\t\t\tthis.provider.providerName = data.providerName\n\t\t\t\tthis.provider.phone = data.phone\n\t\t\t\tthis.provider.address = data.address\n\t\t\t}\n\t\t},\n\t\trefreshModal() {\n\t\t\tthis.provider.providerID = ''\n\t\t\tthis.provider.providerName = ''\n\t\t\tthis.provider.phone = ''\n\t\t\tthis.provider.address = ''\n\t\t\tthis.confirmModalLoading = false\n\t\t},\n\t\tasync handleActionProviderOk() {\n\t\t\tthis.confirmModalLoading = true\n\t\t\tconst providerData = {\n\t\t\t\tproviderName: this.provider.providerName,\n\t\t\t\tphone: this.provider.phone,\n\t\t\t\taddress: this.provider.address,\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tif (!this.provider.providerID) {\n\t\t\t\t\tconst provider = await addProvider(providerData)\n\t\t\t\t\tthis.$emit('actionProvider', provider)\n\t\t\t\t} else {\n\t\t\t\t\tconst provider = await updateProvider(this.provider.providerID, providerData)\n\t\t\t\t\tthis.$emit('actionProvider', provider)\n\t\t\t\t}\n\t\t\t\tthis.visibleModal = false\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error)\n\t\t\t}\n\t\t},\n\t},\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.w-100px {\n\twidth: 100px;\n}\n</style>\n","import { render } from \"./ModalCreateModifyProvider.vue?vue&type=template&id=62472f8a&scoped=true\"\nimport script from \"./ModalCreateModifyProvider.vue?vue&type=script&lang=js\"\nexport * from \"./ModalCreateModifyProvider.vue?vue&type=script&lang=js\"\n\nimport \"./ModalCreateModifyProvider.vue?vue&type=style&index=0&id=62472f8a&lang=scss&scoped=true\"\n\nimport exportComponent from \"D:\\\\Projects\\\\bstrang-vn\\\\bstrang-vn--vuejs\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-62472f8a\"]])\n\nexport default __exports__","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"],"sourceRoot":""}